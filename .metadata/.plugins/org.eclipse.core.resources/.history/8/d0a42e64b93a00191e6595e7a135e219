package com.jwt.struts.action;

public class SubStringSearch {

	public static void main(String[] args) {

		String input = "TbcTestabcTest";
		String subString = "Test";

		int[] kmpPatternArray = buildKmpPattern("abcabcaba");
		searchSubString(input, subString);
		kmpSubStringSearch(input, subString, kmpPatternArray);

	}

	private static boolean searchSubString(String input, String searchString) {
		boolean result = false;

		int i = 0;
		while(i < input.length()) {
			int searchIndex = 0;
			while( searchIndex < searchString.length()) {
				if(input.charAt(i) == searchString.charAt(searchIndex)) {
					searchIndex++;
					if(searchIndex == searchString.length()) {
						result = true;
						System.out.println("Input string found at the location "
								+ "starting from " + (i-searchIndex)  + " and ending at " + (i-1));
						searchIndex = 0;
						break;
					}
					continue;
				}else if(searchIndex == 0){
					i++;
				}
				break;
			}
		}
		return result;
	}
	
	
	private static boolean kmpSubStringSearch(String input, String searchString, int[] prefixArray) {
		boolean result = false;

		return result;
	}
	
	//abcd abcdabcd
	
	//result[] = {0, 0, 0, 1, 2, 3, 4, 5, 1}
	
	private static int[] buildKmpPattern(String input) {
		int j=0;
		int[] result = new int[input.length()];
		result[0] = 0;
		for(int i=1; i<input.length(); i++) {
			if(input.charAt(j) == input.charAt(i)) {
				result[i] = j++ + 1;
			}else {
				while(j != 0) {
					j = result[j-1];
					if(input.charAt(j) == input.charAt(i)) {
						result[i] = j++ + 1;
						break;
					}
				}
			}
		}
		return result;
	}
}
